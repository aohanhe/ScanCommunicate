buildscript {
	ext {
		springBootVersion = '2.1.0.M2'
	}
	repositories {
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		mavenCentral()
		
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ao'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
	mavenCentral()
	// 龙创私有仓库，存放了龙创自有的技术架构的jar包
	maven { url 'http://192.168.1.45:9081/repository/gdlc/' }
}

ext {
	springStatemachineVersion = '2.0.1.RELEASE'
}

dependencies {
	compile project(':ScanBisServer')
	compile ('com.ao:swallowIotServer:0.0.1-SNAPSHOT')
	
	compile('org.springframework.statemachine:spring-statemachine-starter')
	compile('org.springframework.statemachine:spring-statemachine-data-mongodb')
	
	compile('org.apache.commons:commons-lang3:3.8')
	compile('io.projectreactor:reactor-core')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.springframework.integration:spring-integration-mqtt')
	compile('org.springframework.integration:spring-integration-stream')
	compile('org.apache.httpcomponents:httpcore')
	compile('org.apache.httpcomponents:httpclient')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.statemachine:spring-statemachine-bom:${springStatemachineVersion}"
	}
}

tasks.withType(JavaCompile) {	
		options.encoding = 'UTF-8'	
}